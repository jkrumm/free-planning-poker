import Head from "next/head";
import React, { useEffect } from "react";
import Link from "next/link";
import { useRouter } from "next/router";
import { api } from "~/utils/api";
import { setLocalstorageRoom } from "~/store/local-storage";
import { configureAbly, useChannel } from "@ably-labs/react-hooks";
import { v4 } from "uuid";
import { useWsStore } from "~/store/ws-store";

const Room = () => {
  configureAbly({
    authUrl: `${
      process.env.API_ROOT || "http://localhost:3000/"
    }api/ably-token`,
    clientId: v4(),
  });

  const router = useRouter();
  const room = router.query.room as string;

  const setRoom = api.room.setRoom.useQuery({ room });

  const messages = useWsStore((store) => store.messages);
  const addMessage = useWsStore((store) => store.addMessage);

  useEffect(() => {
    if (!room || room === "undefined") {
      setLocalstorageRoom(null);
      router.push(`/`);
    }
    setLocalstorageRoom(room);
  }, []);

  const [channel] = useChannel("your-channel-name", (message) => {
    console.log(message);
    addMessage(message.data.text);
  });

  if (process.browser) {
    window.onbeforeunload = async () => {
      await channel.presence.leave();
    };
  }

  return (
    <>
      <Head>
        <title>Planning Poker</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <Link href={"/"}>HOME</Link>
          <h1>Messages</h1>
          <p>{JSON.stringify(messages)}</p>
          <br />
          <h1>Presences</h1>
          <div>
            {/*{presences.map((item) => (*/}
            {/*  <div>{presencesMap.get(item)}</div>*/}
            {/*))}*/}
            {/*{*/}
            {/*  () => {for (const item of presences) {*/}
            {/*  <div key={key}>{value}</div>*/}
            {/*}}*/}
            {/*}*/}
            {/*{presences.forEach((value, key, map) => {*/}
            {/*  return <div key={key}>{value}</div>;*/}
            {/*})}*/}
          </div>
          {/*<Messages messages={messages} />*/}
          <button
            onClick={async () => {
              // await actions.sendMessage();
              channel.publish("test-message", { text: "message text" });
            }}
          >
            SEND MESSAGE
          </button>

          <button
            onClick={async () => {
              setLocalstorageRoom(null);
              await router.push(`/`);
            }}
          >
            LEAVE ROOM
          </button>
        </div>
      </main>
    </>
  );
};

export default Room;

const Messages: React.FC<{ messages: string[] }> = ({ messages }) => {
  return (
    <div>
      {messages.map((item, index) => (
        <div key={index}>{item}</div>
      ))}
    </div>
  );
};
